{"remainingRequest":"/Users/liuhuimin/Desktop/案例以及备份代码存放/demo/admin-demo/node_modules/_babel-loader@8.2.3@babel-loader/lib/index.js!/Users/liuhuimin/Desktop/案例以及备份代码存放/demo/admin-demo/node_modules/_eslint-loader@2.2.1@eslint-loader/index.js??ref--13-0!/Users/liuhuimin/Desktop/案例以及备份代码存放/demo/admin-demo/src/utils/http.js","dependencies":[{"path":"/Users/liuhuimin/Desktop/案例以及备份代码存放/demo/admin-demo/src/utils/http.js","mtime":1560739398000},{"path":"/Users/liuhuimin/Desktop/案例以及备份代码存放/demo/admin-demo/babel.config.js","mtime":1560396758000},{"path":"/Users/liuhuimin/Desktop/案例以及备份代码存放/demo/admin-demo/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuhuimin/Desktop/案例以及备份代码存放/demo/admin-demo/node_modules/_babel-loader@8.2.3@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/liuhuimin/Desktop/案例以及备份代码存放/demo/admin-demo/node_modules/_eslint-loader@2.2.1@eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["// 引入axios以及element ui中的loading和message组件\nimport axios from 'axios';\nimport router from \"../router/index\";\nimport { Loading, Message } from 'element-ui'; // http请求拦截器\n\nvar loadinginstace;\naxios.interceptors.request.use(function (config) {\n  config.headers = {\n    UserId: localStorage.getItem('username'),\n    Authorization: localStorage.getItem('token')\n  }; // element ui Loading方法\n\n  loadinginstace = Loading.service({\n    fullscreen: true,\n    background: 'rgba(0, 0, 0, 0)'\n  });\n  return config;\n}, function (error) {\n  loadinginstace.close();\n  Message.error({\n    message: '加载超时'\n  });\n  return Promise.reject(error);\n}); // http响应拦截器\n\naxios.interceptors.response.use(function (data) {\n  // 响应成功关闭loading\n  if (data.data.StatusCode == 401) {\n    // token 失效跳转到登陆页面\n    router.push({\n      path: '/login'\n    });\n    loadinginstace.close();\n    return data;\n  } else {\n    loadinginstace.close();\n    return data;\n  }\n}, function (error) {\n  loadinginstace.close();\n  return Promise.reject(error);\n});\nexport { axios };",{"version":3,"sources":["/Users/liuhuimin/Desktop/案例以及备份代码存放/demo/admin-demo/src/utils/http.js"],"names":["axios","router","Loading","Message","loadinginstace","interceptors","request","use","config","headers","UserId","localStorage","getItem","Authorization","service","fullscreen","background","error","close","message","Promise","reject","response","data","StatusCode","push","path"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP;AACA,SACEC,OADF,EAEEC,OAFF,QAGO,YAHP,C,CAKA;;AACA,IAAIC,cAAJ;AACAJ,KAAK,CAACK,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACE,UAAAC,MAAM,EAAI;AACRA,EAAAA,MAAM,CAACC,OAAP,GAAiB;AACfC,IAAAA,MAAM,EAAEC,YAAY,CAACC,OAAb,CAAqB,UAArB,CADO;AAEfC,IAAAA,aAAa,EAAEF,YAAY,CAACC,OAAb,CAAqB,OAArB;AAFA,GAAjB,CADQ,CAKR;;AACAR,EAAAA,cAAc,GAAGF,OAAO,CAACY,OAAR,CAAgB;AAC/BC,IAAAA,UAAU,EAAE,IADmB;AAE/BC,IAAAA,UAAU,EAAE;AAFmB,GAAhB,CAAjB;AAIA,SAAOR,MAAP;AACD,CAZH,EAaE,UAAAS,KAAK,EAAI;AACPb,EAAAA,cAAc,CAACc,KAAf;AACAf,EAAAA,OAAO,CAACc,KAAR,CAAc;AACZE,IAAAA,OAAO,EAAE;AADG,GAAd;AAGA,SAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD,CAnBH,E,CAqBA;;AACAjB,KAAK,CAACK,YAAN,CAAmBiB,QAAnB,CAA4Bf,GAA5B,CACE,UAAAgB,IAAI,EAAI;AACN;AACA,MAAIA,IAAI,CAACA,IAAL,CAAUC,UAAV,IAAwB,GAA5B,EAAiC;AAC/B;AACAvB,IAAAA,MAAM,CAACwB,IAAP,CAAY;AACVC,MAAAA,IAAI,EAAE;AADI,KAAZ;AAGAtB,IAAAA,cAAc,CAACc,KAAf;AACA,WAAOK,IAAP;AACD,GAPD,MAOO;AACLnB,IAAAA,cAAc,CAACc,KAAf;AACA,WAAOK,IAAP;AACD;AACF,CAdH,EAeE,UAAAN,KAAK,EAAI;AACPb,EAAAA,cAAc,CAACc,KAAf;AACA,SAAOE,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD,CAlBH;AAqBA,SACEjB,KADF","sourcesContent":["// 引入axios以及element ui中的loading和message组件\r\nimport axios from 'axios'\r\nimport router from '../router/index'\r\nimport {\r\n  Loading,\r\n  Message\r\n} from 'element-ui'\r\n\r\n// http请求拦截器\r\nlet loadinginstace\r\naxios.interceptors.request.use(\r\n  config => {\r\n    config.headers = {\r\n      UserId: localStorage.getItem('username'),\r\n      Authorization: localStorage.getItem('token')\r\n    }\r\n    // element ui Loading方法\r\n    loadinginstace = Loading.service({\r\n      fullscreen: true,\r\n      background: 'rgba(0, 0, 0, 0)'\r\n    })\r\n    return config\r\n  },\r\n  error => {\r\n    loadinginstace.close()\r\n    Message.error({\r\n      message: '加载超时'\r\n    })\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n// http响应拦截器\r\naxios.interceptors.response.use(\r\n  data => {\r\n    // 响应成功关闭loading\r\n    if (data.data.StatusCode == 401) {\r\n      // token 失效跳转到登陆页面\r\n      router.push({\r\n        path: '/login'\r\n      })\r\n      loadinginstace.close()\r\n      return data\r\n    } else {\r\n      loadinginstace.close()\r\n      return data\r\n    }\r\n  },\r\n  error => {\r\n    loadinginstace.close()\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport {\r\n  axios\r\n}"]}]}